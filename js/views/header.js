// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(["text!templates/header.html"], function(Template) {
    var Header;
    Header = (function(_super) {

      __extends(Header, _super);

      function Header() {
        return Header.__super__.constructor.apply(this, arguments);
      }

      Header.prototype.el = ".header";

      Header.prototype.template = _.template(Template);

      Header.prototype.events = {
        "tap #locate": "locate"
      };

      Header.prototype.render = function(e) {
        $("#" + e.id + " div[data-role='header']").html(this.template());
        return this.initCategories();
      };

      Header.prototype.initCategories = function() {
        var category, nav, _i, _len, _ref, _results;
        nav = $(".nav");
        _ref = utils.filter.get("categoriesOut");
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          category = _ref[_i];
          _results.push(nav.find("a[data-category='" + category + "']").addClass("out"));
        }
        return _results;
      };

      Header.prototype.locate = function() {
        var control;
        if (utils.destinationMap !== null) {
          control = utils.destinationMap.instance.getControlsBy("id", "locate-control")[0];
        } else {
          control = utils.map.instance.getControlsBy("id", "locate-control")[0];
        }
        if (control.active) {
          return control.getCurrentLocation();
        } else {
          return control.activate();
        }
      };

      return Header;

    })(Backbone.View);
    return views.header = new Header;
  });

}).call(this);
